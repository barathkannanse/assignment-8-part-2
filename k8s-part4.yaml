apiVersion: v1
kind: Namespace
metadata:
  name: a8p4
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: a8p4
type: Opaque
stringData:
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_DB: example
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: a8p4
spec:
  replicas: 1
  selector:
    matchLabels: { app: postgres }
  template:
    metadata: { labels: { app: postgres } }
    spec:
      containers:
        - name: postgres
          image: postgres:15-alpine
          ports: [{ containerPort: 5432 }]
          env:
            - name: POSTGRES_USER
              valueFrom: { secretKeyRef: { name: postgres-secret, key: POSTGRES_USER } }
            - name: POSTGRES_PASSWORD
              valueFrom: { secretKeyRef: { name: postgres-secret, key: POSTGRES_PASSWORD } }
            - name: POSTGRES_DB
              valueFrom: { secretKeyRef: { name: postgres-secret, key: POSTGRES_DB } }
          volumeMounts:
            - name: pgdata
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: pgdata
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: a8p4
spec:
  selector: { app: postgres }
  ports:
    - name: postgres
      port: 5432
      targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi
  namespace: a8p4
spec:
  replicas: 1
  selector:
    matchLabels: { app: fastapi }
  template:
    metadata: { labels: { app: fastapi } }
    spec:
      containers:
        - name: fastapi
          image: fastapi-demo:latest
          imagePullPolicy: IfNotPresent
          ports: [{ containerPort: 8001 }]
          env:
            - name: POSTGRES_SERVER 
              value: postgres
            - name: POSTGRES_USER
              valueFrom: { secretKeyRef: { name: postgres-secret, key: POSTGRES_USER } }
            - name: POSTGRES_PASSWORD
              valueFrom: { secretKeyRef: { name: postgres-secret, key: POSTGRES_PASSWORD } }
            - name: POSTGRES_DB
              valueFrom: { secretKeyRef: { name: postgres-secret, key: POSTGRES_DB } }
            - name: POSTGRES_PORT
              value: "5432"
          readinessProbe:
            httpGet: { path: "/", port: 8001 }
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet: { path: "/", port: 8001 }
            initialDelaySeconds: 10
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: fastapi
  namespace: a8p4
spec:
  type: NodePort
  selector: { app: fastapi }
  ports:
    - name: http
      port: 8001
      targetPort: 8001
      nodePort: 30001
